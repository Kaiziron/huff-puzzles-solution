
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr              // [selector]
    dup1 __FUNC_SIG(add1) eq add1 jumpi     // [selector]
    
    0x00 dup1 revert
    
    add1:
        0x04 calldataload                   // [num] [selector]
        0x01 add                            // [num + 1] [selector]
        0x00 mstore                         // [selector]
        msize 0x00 return                   // [selector]
}
